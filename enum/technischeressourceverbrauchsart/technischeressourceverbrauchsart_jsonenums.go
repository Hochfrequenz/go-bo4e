// Code generated by jsonenums --type TechnischeRessourceVerbrauchsart; DO NOT EDIT.

package technischeressourceverbrauchsart

import (
	"encoding/json"
	"fmt"
)

var (
	_TechnischeRessourceVerbrauchsartNameToValue = map[string]TechnischeRessourceVerbrauchsart{
		"KRAFT_LICHT":         KRAFT_LICHT,
		"WAERME":              WAERME,
		"E_MOBILITAET":        E_MOBILITAET,
		"STRASSENBELEUCHTUNG": STRASSENBELEUCHTUNG,
	}

	_TechnischeRessourceVerbrauchsartValueToName = map[TechnischeRessourceVerbrauchsart]string{
		KRAFT_LICHT:         "KRAFT_LICHT",
		WAERME:              "WAERME",
		E_MOBILITAET:        "E_MOBILITAET",
		STRASSENBELEUCHTUNG: "STRASSENBELEUCHTUNG",
	}
)

func init() {
	var v TechnischeRessourceVerbrauchsart
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_TechnischeRessourceVerbrauchsartNameToValue = map[string]TechnischeRessourceVerbrauchsart{
			interface{}(KRAFT_LICHT).(fmt.Stringer).String():         KRAFT_LICHT,
			interface{}(WAERME).(fmt.Stringer).String():              WAERME,
			interface{}(E_MOBILITAET).(fmt.Stringer).String():        E_MOBILITAET,
			interface{}(STRASSENBELEUCHTUNG).(fmt.Stringer).String(): STRASSENBELEUCHTUNG,
		}
	}
}

// MarshalJSON is generated so TechnischeRessourceVerbrauchsart satisfies json.Marshaler.
func (r TechnischeRessourceVerbrauchsart) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _TechnischeRessourceVerbrauchsartValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid TechnischeRessourceVerbrauchsart: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so TechnischeRessourceVerbrauchsart satisfies json.Unmarshaler.
func (r *TechnischeRessourceVerbrauchsart) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("TechnischeRessourceVerbrauchsart should be a string, got %s", data)
	}
	v, ok := _TechnischeRessourceVerbrauchsartNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid TechnischeRessourceVerbrauchsart %q", s)
	}
	*r = v
	return nil
}
