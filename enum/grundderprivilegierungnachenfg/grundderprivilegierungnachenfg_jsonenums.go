// Code generated by jsonenums --type GrundDerPrivilegierungNachEnFG; DO NOT EDIT.

package grundderprivilegierungnachenfg

import (
	"encoding/json"
	"fmt"
)

var (
	_GrundDerPrivilegierungNachEnFGNameToValue = map[string]GrundDerPrivilegierungNachEnFG{
		"STROMSPEICHER_UND_VERLUSTENERGIE":                                 STROMSPEICHER_UND_VERLUSTENERGIE,
		"ELEKTRISCH_ANGETRIEBENE_WAERMEPUMPEN":                             ELEKTRISCH_ANGETRIEBENE_WAERMEPUMPEN,
		"UMLAGEERHEBUNG_BEI_ANLAGEN_ZUR_VERSTROMUNG_VON_KUPPELGASEN":       UMLAGEERHEBUNG_BEI_ANLAGEN_ZUR_VERSTROMUNG_VON_KUPPELGASEN,
		"HERSTELLUNG_VON_GRUENEN_WASSERSTOFF":                              HERSTELLUNG_VON_GRUENEN_WASSERSTOFF,
		"STROMKOSTENINTENSIVE_UNTERNEHMEN":                                 STROMKOSTENINTENSIVE_UNTERNEHMEN,
		"HERSTELLUNG_VON_WASSERSTOFF_IN_STROMKOSTENINTENSIVEN_UNTERNEHMEN": HERSTELLUNG_VON_WASSERSTOFF_IN_STROMKOSTENINTENSIVEN_UNTERNEHMEN,
		"SCHIENENBAHNEN": SCHIENENBAHNEN,
		"ELEKTRISCHE_BETRIEBENE_BUSSEN_IM_LINIENVERKEHR": ELEKTRISCHE_BETRIEBENE_BUSSEN_IM_LINIENVERKEHR,
		"LANDSTROMANLAGEN": LANDSTROMANLAGEN,
	}

	_GrundDerPrivilegierungNachEnFGValueToName = map[GrundDerPrivilegierungNachEnFG]string{
		STROMSPEICHER_UND_VERLUSTENERGIE:                                 "STROMSPEICHER_UND_VERLUSTENERGIE",
		ELEKTRISCH_ANGETRIEBENE_WAERMEPUMPEN:                             "ELEKTRISCH_ANGETRIEBENE_WAERMEPUMPEN",
		UMLAGEERHEBUNG_BEI_ANLAGEN_ZUR_VERSTROMUNG_VON_KUPPELGASEN:       "UMLAGEERHEBUNG_BEI_ANLAGEN_ZUR_VERSTROMUNG_VON_KUPPELGASEN",
		HERSTELLUNG_VON_GRUENEN_WASSERSTOFF:                              "HERSTELLUNG_VON_GRUENEN_WASSERSTOFF",
		STROMKOSTENINTENSIVE_UNTERNEHMEN:                                 "STROMKOSTENINTENSIVE_UNTERNEHMEN",
		HERSTELLUNG_VON_WASSERSTOFF_IN_STROMKOSTENINTENSIVEN_UNTERNEHMEN: "HERSTELLUNG_VON_WASSERSTOFF_IN_STROMKOSTENINTENSIVEN_UNTERNEHMEN",
		SCHIENENBAHNEN: "SCHIENENBAHNEN",
		ELEKTRISCHE_BETRIEBENE_BUSSEN_IM_LINIENVERKEHR: "ELEKTRISCHE_BETRIEBENE_BUSSEN_IM_LINIENVERKEHR",
		LANDSTROMANLAGEN: "LANDSTROMANLAGEN",
	}
)

func init() {
	var v GrundDerPrivilegierungNachEnFG
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_GrundDerPrivilegierungNachEnFGNameToValue = map[string]GrundDerPrivilegierungNachEnFG{
			interface{}(STROMSPEICHER_UND_VERLUSTENERGIE).(fmt.Stringer).String():                                 STROMSPEICHER_UND_VERLUSTENERGIE,
			interface{}(ELEKTRISCH_ANGETRIEBENE_WAERMEPUMPEN).(fmt.Stringer).String():                             ELEKTRISCH_ANGETRIEBENE_WAERMEPUMPEN,
			interface{}(UMLAGEERHEBUNG_BEI_ANLAGEN_ZUR_VERSTROMUNG_VON_KUPPELGASEN).(fmt.Stringer).String():       UMLAGEERHEBUNG_BEI_ANLAGEN_ZUR_VERSTROMUNG_VON_KUPPELGASEN,
			interface{}(HERSTELLUNG_VON_GRUENEN_WASSERSTOFF).(fmt.Stringer).String():                              HERSTELLUNG_VON_GRUENEN_WASSERSTOFF,
			interface{}(STROMKOSTENINTENSIVE_UNTERNEHMEN).(fmt.Stringer).String():                                 STROMKOSTENINTENSIVE_UNTERNEHMEN,
			interface{}(HERSTELLUNG_VON_WASSERSTOFF_IN_STROMKOSTENINTENSIVEN_UNTERNEHMEN).(fmt.Stringer).String(): HERSTELLUNG_VON_WASSERSTOFF_IN_STROMKOSTENINTENSIVEN_UNTERNEHMEN,
			interface{}(SCHIENENBAHNEN).(fmt.Stringer).String():                                                   SCHIENENBAHNEN,
			interface{}(ELEKTRISCHE_BETRIEBENE_BUSSEN_IM_LINIENVERKEHR).(fmt.Stringer).String():                   ELEKTRISCHE_BETRIEBENE_BUSSEN_IM_LINIENVERKEHR,
			interface{}(LANDSTROMANLAGEN).(fmt.Stringer).String():                                                 LANDSTROMANLAGEN,
		}
	}
}

// MarshalJSON is generated so GrundDerPrivilegierungNachEnFG satisfies json.Marshaler.
func (r GrundDerPrivilegierungNachEnFG) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _GrundDerPrivilegierungNachEnFGValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid GrundDerPrivilegierungNachEnFG: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so GrundDerPrivilegierungNachEnFG satisfies json.Unmarshaler.
func (r *GrundDerPrivilegierungNachEnFG) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("GrundDerPrivilegierungNachEnFG should be a string, got %s", data)
	}
	v, ok := _GrundDerPrivilegierungNachEnFGNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid GrundDerPrivilegierungNachEnFG %q", s)
	}
	*r = v
	return nil
}
