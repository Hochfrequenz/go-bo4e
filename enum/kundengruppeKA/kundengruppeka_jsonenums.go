// Code generated by jsonenums --type KundengruppeKA; DO NOT EDIT.

package kundengruppeKA

import (
	"encoding/json"
	"fmt"
)

var (
	_KundengruppeKANameToValue = map[string]KundengruppeKA{
		"S_TARIF_25000":    S_TARIF_25000,
		"S_TARIF_100000":   S_TARIF_100000,
		"S_TARIF_500000":   S_TARIF_500000,
		"S_TARIF_G_500000": S_TARIF_G_500000,
		"S_SONDERKUNDE":    S_SONDERKUNDE,
		"G_KOWA_25000":     G_KOWA_25000,
		"G_KOWA_100000":    G_KOWA_100000,
		"G_KOWA_500000":    G_KOWA_500000,
		"G_KOWA_G_500000":  G_KOWA_G_500000,
		"G_TARIF_25000":    G_TARIF_25000,
		"G_TARIF_100000":   G_TARIF_100000,
		"G_TARIF_500000":   G_TARIF_500000,
		"G_TARIF_G_500000": G_TARIF_G_500000,
		"G_SONDERKUNDE":    G_SONDERKUNDE,
		"SONDER_KAS":       SONDER_KAS,
		"SONDER_SAS":       SONDER_SAS,
		"SONDER_TAS":       SONDER_TAS,
		"SONDER_TKS":       SONDER_TKS,
		"SONDER_TSS":       SONDER_TSS,
	}

	_KundengruppeKAValueToName = map[KundengruppeKA]string{
		S_TARIF_25000:    "S_TARIF_25000",
		S_TARIF_100000:   "S_TARIF_100000",
		S_TARIF_500000:   "S_TARIF_500000",
		S_TARIF_G_500000: "S_TARIF_G_500000",
		S_SONDERKUNDE:    "S_SONDERKUNDE",
		G_KOWA_25000:     "G_KOWA_25000",
		G_KOWA_100000:    "G_KOWA_100000",
		G_KOWA_500000:    "G_KOWA_500000",
		G_KOWA_G_500000:  "G_KOWA_G_500000",
		G_TARIF_25000:    "G_TARIF_25000",
		G_TARIF_100000:   "G_TARIF_100000",
		G_TARIF_500000:   "G_TARIF_500000",
		G_TARIF_G_500000: "G_TARIF_G_500000",
		G_SONDERKUNDE:    "G_SONDERKUNDE",
		SONDER_KAS:       "SONDER_KAS",
		SONDER_SAS:       "SONDER_SAS",
		SONDER_TAS:       "SONDER_TAS",
		SONDER_TKS:       "SONDER_TKS",
		SONDER_TSS:       "SONDER_TSS",
	}
)

func init() {
	var v KundengruppeKA
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_KundengruppeKANameToValue = map[string]KundengruppeKA{
			interface{}(S_TARIF_25000).(fmt.Stringer).String():    S_TARIF_25000,
			interface{}(S_TARIF_100000).(fmt.Stringer).String():   S_TARIF_100000,
			interface{}(S_TARIF_500000).(fmt.Stringer).String():   S_TARIF_500000,
			interface{}(S_TARIF_G_500000).(fmt.Stringer).String(): S_TARIF_G_500000,
			interface{}(S_SONDERKUNDE).(fmt.Stringer).String():    S_SONDERKUNDE,
			interface{}(G_KOWA_25000).(fmt.Stringer).String():     G_KOWA_25000,
			interface{}(G_KOWA_100000).(fmt.Stringer).String():    G_KOWA_100000,
			interface{}(G_KOWA_500000).(fmt.Stringer).String():    G_KOWA_500000,
			interface{}(G_KOWA_G_500000).(fmt.Stringer).String():  G_KOWA_G_500000,
			interface{}(G_TARIF_25000).(fmt.Stringer).String():    G_TARIF_25000,
			interface{}(G_TARIF_100000).(fmt.Stringer).String():   G_TARIF_100000,
			interface{}(G_TARIF_500000).(fmt.Stringer).String():   G_TARIF_500000,
			interface{}(G_TARIF_G_500000).(fmt.Stringer).String(): G_TARIF_G_500000,
			interface{}(G_SONDERKUNDE).(fmt.Stringer).String():    G_SONDERKUNDE,
			interface{}(SONDER_KAS).(fmt.Stringer).String():       SONDER_KAS,
			interface{}(SONDER_SAS).(fmt.Stringer).String():       SONDER_SAS,
			interface{}(SONDER_TAS).(fmt.Stringer).String():       SONDER_TAS,
			interface{}(SONDER_TKS).(fmt.Stringer).String():       SONDER_TKS,
			interface{}(SONDER_TSS).(fmt.Stringer).String():       SONDER_TSS,
		}
	}
}

// MarshalJSON is generated so KundengruppeKA satisfies json.Marshaler.
func (r KundengruppeKA) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _KundengruppeKAValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid KundengruppeKA: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so KundengruppeKA satisfies json.Unmarshaler.
func (r *KundengruppeKA) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("KundengruppeKA should be a string, got %s", data)
	}
	v, ok := _KundengruppeKANameToValue[s]
	if !ok {
		return fmt.Errorf("invalid KundengruppeKA %q", s)
	}
	*r = v
	return nil
}
