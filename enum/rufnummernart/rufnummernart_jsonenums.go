// Code generated by jsonenums --type Rufnummernart; DO NOT EDIT.

package rufnummernart

import (
	"encoding/json"
	"fmt"
)

var (
	_RufnummernartNameToValue = map[string]Rufnummernart{
		"RUF_ZENTRALE":  RUF_ZENTRALE,
		"FAX_ZENTRALE":  FAX_ZENTRALE,
		"SAMMELRUF":     SAMMELRUF,
		"SAMMELFAX":     SAMMELFAX,
		"ABTEILUNGRUF":  ABTEILUNGRUF,
		"ABTEILUNGFAX":  ABTEILUNGFAX,
		"RUF_DURCHWAHL": RUF_DURCHWAHL,
		"FAX_DURCHWAHL": FAX_DURCHWAHL,
		"MOBIL_NUMMER":  MOBIL_NUMMER,
	}

	_RufnummernartValueToName = map[Rufnummernart]string{
		RUF_ZENTRALE:  "RUF_ZENTRALE",
		FAX_ZENTRALE:  "FAX_ZENTRALE",
		SAMMELRUF:     "SAMMELRUF",
		SAMMELFAX:     "SAMMELFAX",
		ABTEILUNGRUF:  "ABTEILUNGRUF",
		ABTEILUNGFAX:  "ABTEILUNGFAX",
		RUF_DURCHWAHL: "RUF_DURCHWAHL",
		FAX_DURCHWAHL: "FAX_DURCHWAHL",
		MOBIL_NUMMER:  "MOBIL_NUMMER",
	}
)

func init() {
	var v Rufnummernart
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_RufnummernartNameToValue = map[string]Rufnummernart{
			interface{}(RUF_ZENTRALE).(fmt.Stringer).String():  RUF_ZENTRALE,
			interface{}(FAX_ZENTRALE).(fmt.Stringer).String():  FAX_ZENTRALE,
			interface{}(SAMMELRUF).(fmt.Stringer).String():     SAMMELRUF,
			interface{}(SAMMELFAX).(fmt.Stringer).String():     SAMMELFAX,
			interface{}(ABTEILUNGRUF).(fmt.Stringer).String():  ABTEILUNGRUF,
			interface{}(ABTEILUNGFAX).(fmt.Stringer).String():  ABTEILUNGFAX,
			interface{}(RUF_DURCHWAHL).(fmt.Stringer).String(): RUF_DURCHWAHL,
			interface{}(FAX_DURCHWAHL).(fmt.Stringer).String(): FAX_DURCHWAHL,
			interface{}(MOBIL_NUMMER).(fmt.Stringer).String():  MOBIL_NUMMER,
		}
	}
}

// MarshalJSON is generated so Rufnummernart satisfies json.Marshaler.
func (r Rufnummernart) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _RufnummernartValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Rufnummernart: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Rufnummernart satisfies json.Unmarshaler.
func (r *Rufnummernart) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Rufnummernart should be a string, got %s", data)
	}
	v, ok := _RufnummernartNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Rufnummernart %q", s)
	}
	*r = v
	return nil
}
