// Code generated by jsonenums --type Tarifstufe; DO NOT EDIT.

package tarifstufe

import (
	"encoding/json"
	"fmt"
)

var (
	_TarifstufeNameToValue = map[string]Tarifstufe{
		"TARIFSTUFE_0": TARIFSTUFE_0,
		"TARIFSTUFE_1": TARIFSTUFE_1,
		"TARIFSTUFE_2": TARIFSTUFE_2,
		"TARIFSTUFE_3": TARIFSTUFE_3,
		"TARIFSTUFE_4": TARIFSTUFE_4,
		"TARIFSTUFE_5": TARIFSTUFE_5,
		"TARIFSTUFE_6": TARIFSTUFE_6,
		"TARIFSTUFE_7": TARIFSTUFE_7,
		"TARIFSTUFE_8": TARIFSTUFE_8,
		"TARIFSTUFE_9": TARIFSTUFE_9,
	}

	_TarifstufeValueToName = map[Tarifstufe]string{
		TARIFSTUFE_0: "TARIFSTUFE_0",
		TARIFSTUFE_1: "TARIFSTUFE_1",
		TARIFSTUFE_2: "TARIFSTUFE_2",
		TARIFSTUFE_3: "TARIFSTUFE_3",
		TARIFSTUFE_4: "TARIFSTUFE_4",
		TARIFSTUFE_5: "TARIFSTUFE_5",
		TARIFSTUFE_6: "TARIFSTUFE_6",
		TARIFSTUFE_7: "TARIFSTUFE_7",
		TARIFSTUFE_8: "TARIFSTUFE_8",
		TARIFSTUFE_9: "TARIFSTUFE_9",
	}
)

func init() {
	var v Tarifstufe
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_TarifstufeNameToValue = map[string]Tarifstufe{
			interface{}(TARIFSTUFE_0).(fmt.Stringer).String(): TARIFSTUFE_0,
			interface{}(TARIFSTUFE_1).(fmt.Stringer).String(): TARIFSTUFE_1,
			interface{}(TARIFSTUFE_2).(fmt.Stringer).String(): TARIFSTUFE_2,
			interface{}(TARIFSTUFE_3).(fmt.Stringer).String(): TARIFSTUFE_3,
			interface{}(TARIFSTUFE_4).(fmt.Stringer).String(): TARIFSTUFE_4,
			interface{}(TARIFSTUFE_5).(fmt.Stringer).String(): TARIFSTUFE_5,
			interface{}(TARIFSTUFE_6).(fmt.Stringer).String(): TARIFSTUFE_6,
			interface{}(TARIFSTUFE_7).(fmt.Stringer).String(): TARIFSTUFE_7,
			interface{}(TARIFSTUFE_8).(fmt.Stringer).String(): TARIFSTUFE_8,
			interface{}(TARIFSTUFE_9).(fmt.Stringer).String(): TARIFSTUFE_9,
		}
	}
}

// MarshalJSON is generated so Tarifstufe satisfies json.Marshaler.
func (r Tarifstufe) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _TarifstufeValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Tarifstufe: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Tarifstufe satisfies json.Unmarshaler.
func (r *Tarifstufe) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Tarifstufe should be a string, got %s", data)
	}
	v, ok := _TarifstufeNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Tarifstufe %q", s)
	}
	*r = v
	return nil
}
