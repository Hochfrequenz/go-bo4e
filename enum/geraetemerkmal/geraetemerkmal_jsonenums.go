// Code generated by jsonenums --type Geraetemerkmal; DO NOT EDIT.

package geraetemerkmal

import (
	"encoding/json"
	"fmt"
)

var (
	_GeraetemerkmalNameToValue = map[string]Geraetemerkmal{
		"EINTARIF":             EINTARIF,
		"ZWEITARIF":            ZWEITARIF,
		"MEHRTARIF":            MEHRTARIF,
		"GAS_G2P5":             GAS_G2P5,
		"GAS_G4":               GAS_G4,
		"GAS_G6":               GAS_G6,
		"GAS_G10":              GAS_G10,
		"GAS_G16":              GAS_G16,
		"GAS_G25":              GAS_G25,
		"GAS_G40":              GAS_G40,
		"GAS_G65":              GAS_G65,
		"GAS_G100":             GAS_G100,
		"GAS_G160":             GAS_G160,
		"GAS_G250":             GAS_G250,
		"GAS_G400":             GAS_G400,
		"GAS_G650":             GAS_G650,
		"GAS_G1000":            GAS_G1000,
		"GAS_G1600":            GAS_G1600,
		"GAS_G2500":            GAS_G2500,
		"IMPULSGEBER_G4_G100":  IMPULSGEBER_G4_G100,
		"IMPULSGEBER_G100":     IMPULSGEBER_G100,
		"MODEM_GSM":            MODEM_GSM,
		"MODEM_GPRS":           MODEM_GPRS,
		"MODEM_FUNK":           MODEM_FUNK,
		"MODEM_GSM_O_LG":       MODEM_GSM_O_LG,
		"MODEM_GSM_M_LG":       MODEM_GSM_M_LG,
		"MODEM_FESTNETZ":       MODEM_FESTNETZ,
		"MODEM_GPRS_M_LG":      MODEM_GPRS_M_LG,
		"PLC_COM":              PLC_COM,
		"ETHERNET_KOM":         ETHERNET_KOM,
		"DSL_KOM":              DSL_KOM,
		"LTE_KOM":              LTE_KOM,
		"RUNDSTEUEREMPFAENGER": RUNDSTEUEREMPFAENGER,
		"TARIFSCHALTGERAET":    TARIFSCHALTGERAET,
		"ZUSTANDS_MU":          ZUSTANDS_MU,
		"TEMPERATUR_MU":        TEMPERATUR_MU,
		"KOMPAKT_MU":           KOMPAKT_MU,
		"SYSTEM_MU":            SYSTEM_MU,
		"UNBESTIMMT":           UNBESTIMMT,
		"WASSER_MWZW":          WASSER_MWZW,
		"WASSER_WZWW":          WASSER_WZWW,
		"WASSER_WZ01":          WASSER_WZ01,
		"WASSER_WZ02":          WASSER_WZ02,
		"WASSER_WZ03":          WASSER_WZ03,
		"WASSER_WZ04":          WASSER_WZ04,
		"WASSER_WZ05":          WASSER_WZ05,
		"WASSER_WZ06":          WASSER_WZ06,
		"WASSER_WZ07":          WASSER_WZ07,
		"WASSER_WZ08":          WASSER_WZ08,
		"WASSER_WZ09":          WASSER_WZ09,
		"WASSER_WZ10":          WASSER_WZ10,
		"WASSER_VWZ04":         WASSER_VWZ04,
		"WASSER_VWZ05":         WASSER_VWZ05,
		"WASSER_VWZ06":         WASSER_VWZ06,
		"WASSER_VWZ07":         WASSER_VWZ07,
		"WASSER_VWZ10":         WASSER_VWZ10,
	}

	_GeraetemerkmalValueToName = map[Geraetemerkmal]string{
		EINTARIF:             "EINTARIF",
		ZWEITARIF:            "ZWEITARIF",
		MEHRTARIF:            "MEHRTARIF",
		GAS_G2P5:             "GAS_G2P5",
		GAS_G4:               "GAS_G4",
		GAS_G6:               "GAS_G6",
		GAS_G10:              "GAS_G10",
		GAS_G16:              "GAS_G16",
		GAS_G25:              "GAS_G25",
		GAS_G40:              "GAS_G40",
		GAS_G65:              "GAS_G65",
		GAS_G100:             "GAS_G100",
		GAS_G160:             "GAS_G160",
		GAS_G250:             "GAS_G250",
		GAS_G400:             "GAS_G400",
		GAS_G650:             "GAS_G650",
		GAS_G1000:            "GAS_G1000",
		GAS_G1600:            "GAS_G1600",
		GAS_G2500:            "GAS_G2500",
		IMPULSGEBER_G4_G100:  "IMPULSGEBER_G4_G100",
		IMPULSGEBER_G100:     "IMPULSGEBER_G100",
		MODEM_GSM:            "MODEM_GSM",
		MODEM_GPRS:           "MODEM_GPRS",
		MODEM_FUNK:           "MODEM_FUNK",
		MODEM_GSM_O_LG:       "MODEM_GSM_O_LG",
		MODEM_GSM_M_LG:       "MODEM_GSM_M_LG",
		MODEM_FESTNETZ:       "MODEM_FESTNETZ",
		MODEM_GPRS_M_LG:      "MODEM_GPRS_M_LG",
		PLC_COM:              "PLC_COM",
		ETHERNET_KOM:         "ETHERNET_KOM",
		DSL_KOM:              "DSL_KOM",
		LTE_KOM:              "LTE_KOM",
		RUNDSTEUEREMPFAENGER: "RUNDSTEUEREMPFAENGER",
		TARIFSCHALTGERAET:    "TARIFSCHALTGERAET",
		ZUSTANDS_MU:          "ZUSTANDS_MU",
		TEMPERATUR_MU:        "TEMPERATUR_MU",
		KOMPAKT_MU:           "KOMPAKT_MU",
		SYSTEM_MU:            "SYSTEM_MU",
		UNBESTIMMT:           "UNBESTIMMT",
		WASSER_MWZW:          "WASSER_MWZW",
		WASSER_WZWW:          "WASSER_WZWW",
		WASSER_WZ01:          "WASSER_WZ01",
		WASSER_WZ02:          "WASSER_WZ02",
		WASSER_WZ03:          "WASSER_WZ03",
		WASSER_WZ04:          "WASSER_WZ04",
		WASSER_WZ05:          "WASSER_WZ05",
		WASSER_WZ06:          "WASSER_WZ06",
		WASSER_WZ07:          "WASSER_WZ07",
		WASSER_WZ08:          "WASSER_WZ08",
		WASSER_WZ09:          "WASSER_WZ09",
		WASSER_WZ10:          "WASSER_WZ10",
		WASSER_VWZ04:         "WASSER_VWZ04",
		WASSER_VWZ05:         "WASSER_VWZ05",
		WASSER_VWZ06:         "WASSER_VWZ06",
		WASSER_VWZ07:         "WASSER_VWZ07",
		WASSER_VWZ10:         "WASSER_VWZ10",
	}
)

func init() {
	var v Geraetemerkmal
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_GeraetemerkmalNameToValue = map[string]Geraetemerkmal{
			interface{}(EINTARIF).(fmt.Stringer).String():             EINTARIF,
			interface{}(ZWEITARIF).(fmt.Stringer).String():            ZWEITARIF,
			interface{}(MEHRTARIF).(fmt.Stringer).String():            MEHRTARIF,
			interface{}(GAS_G2P5).(fmt.Stringer).String():             GAS_G2P5,
			interface{}(GAS_G4).(fmt.Stringer).String():               GAS_G4,
			interface{}(GAS_G6).(fmt.Stringer).String():               GAS_G6,
			interface{}(GAS_G10).(fmt.Stringer).String():              GAS_G10,
			interface{}(GAS_G16).(fmt.Stringer).String():              GAS_G16,
			interface{}(GAS_G25).(fmt.Stringer).String():              GAS_G25,
			interface{}(GAS_G40).(fmt.Stringer).String():              GAS_G40,
			interface{}(GAS_G65).(fmt.Stringer).String():              GAS_G65,
			interface{}(GAS_G100).(fmt.Stringer).String():             GAS_G100,
			interface{}(GAS_G160).(fmt.Stringer).String():             GAS_G160,
			interface{}(GAS_G250).(fmt.Stringer).String():             GAS_G250,
			interface{}(GAS_G400).(fmt.Stringer).String():             GAS_G400,
			interface{}(GAS_G650).(fmt.Stringer).String():             GAS_G650,
			interface{}(GAS_G1000).(fmt.Stringer).String():            GAS_G1000,
			interface{}(GAS_G1600).(fmt.Stringer).String():            GAS_G1600,
			interface{}(GAS_G2500).(fmt.Stringer).String():            GAS_G2500,
			interface{}(IMPULSGEBER_G4_G100).(fmt.Stringer).String():  IMPULSGEBER_G4_G100,
			interface{}(IMPULSGEBER_G100).(fmt.Stringer).String():     IMPULSGEBER_G100,
			interface{}(MODEM_GSM).(fmt.Stringer).String():            MODEM_GSM,
			interface{}(MODEM_GPRS).(fmt.Stringer).String():           MODEM_GPRS,
			interface{}(MODEM_FUNK).(fmt.Stringer).String():           MODEM_FUNK,
			interface{}(MODEM_GSM_O_LG).(fmt.Stringer).String():       MODEM_GSM_O_LG,
			interface{}(MODEM_GSM_M_LG).(fmt.Stringer).String():       MODEM_GSM_M_LG,
			interface{}(MODEM_FESTNETZ).(fmt.Stringer).String():       MODEM_FESTNETZ,
			interface{}(MODEM_GPRS_M_LG).(fmt.Stringer).String():      MODEM_GPRS_M_LG,
			interface{}(PLC_COM).(fmt.Stringer).String():              PLC_COM,
			interface{}(ETHERNET_KOM).(fmt.Stringer).String():         ETHERNET_KOM,
			interface{}(DSL_KOM).(fmt.Stringer).String():              DSL_KOM,
			interface{}(LTE_KOM).(fmt.Stringer).String():              LTE_KOM,
			interface{}(RUNDSTEUEREMPFAENGER).(fmt.Stringer).String(): RUNDSTEUEREMPFAENGER,
			interface{}(TARIFSCHALTGERAET).(fmt.Stringer).String():    TARIFSCHALTGERAET,
			interface{}(ZUSTANDS_MU).(fmt.Stringer).String():          ZUSTANDS_MU,
			interface{}(TEMPERATUR_MU).(fmt.Stringer).String():        TEMPERATUR_MU,
			interface{}(KOMPAKT_MU).(fmt.Stringer).String():           KOMPAKT_MU,
			interface{}(SYSTEM_MU).(fmt.Stringer).String():            SYSTEM_MU,
			interface{}(UNBESTIMMT).(fmt.Stringer).String():           UNBESTIMMT,
			interface{}(WASSER_MWZW).(fmt.Stringer).String():          WASSER_MWZW,
			interface{}(WASSER_WZWW).(fmt.Stringer).String():          WASSER_WZWW,
			interface{}(WASSER_WZ01).(fmt.Stringer).String():          WASSER_WZ01,
			interface{}(WASSER_WZ02).(fmt.Stringer).String():          WASSER_WZ02,
			interface{}(WASSER_WZ03).(fmt.Stringer).String():          WASSER_WZ03,
			interface{}(WASSER_WZ04).(fmt.Stringer).String():          WASSER_WZ04,
			interface{}(WASSER_WZ05).(fmt.Stringer).String():          WASSER_WZ05,
			interface{}(WASSER_WZ06).(fmt.Stringer).String():          WASSER_WZ06,
			interface{}(WASSER_WZ07).(fmt.Stringer).String():          WASSER_WZ07,
			interface{}(WASSER_WZ08).(fmt.Stringer).String():          WASSER_WZ08,
			interface{}(WASSER_WZ09).(fmt.Stringer).String():          WASSER_WZ09,
			interface{}(WASSER_WZ10).(fmt.Stringer).String():          WASSER_WZ10,
			interface{}(WASSER_VWZ04).(fmt.Stringer).String():         WASSER_VWZ04,
			interface{}(WASSER_VWZ05).(fmt.Stringer).String():         WASSER_VWZ05,
			interface{}(WASSER_VWZ06).(fmt.Stringer).String():         WASSER_VWZ06,
			interface{}(WASSER_VWZ07).(fmt.Stringer).String():         WASSER_VWZ07,
			interface{}(WASSER_VWZ10).(fmt.Stringer).String():         WASSER_VWZ10,
		}
	}
}

// MarshalJSON is generated so Geraetemerkmal satisfies json.Marshaler.
func (r Geraetemerkmal) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _GeraetemerkmalValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Geraetemerkmal: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Geraetemerkmal satisfies json.Unmarshaler.
func (r *Geraetemerkmal) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Geraetemerkmal should be a string, got %s", data)
	}
	v, ok := _GeraetemerkmalNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Geraetemerkmal %q", s)
	}
	*r = v
	return nil
}
