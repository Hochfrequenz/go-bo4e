// Code generated by jsonenums --type Dienstleistung; DO NOT EDIT.

package dienstleistung

import (
	"encoding/json"
	"fmt"
)

var (
	_DienstleistungNameToValue = map[string]Dienstleistung{
		"DATENBEREITSTELLUNG_TAEGLICH":              DATENBEREITSTELLUNG_TAEGLICH,
		"DATENBEREITSTELLUNG_WOECHENTLICH":          DATENBEREITSTELLUNG_WOECHENTLICH,
		"DATENBEREITSTELLUNG_MONATLICH":             DATENBEREITSTELLUNG_MONATLICH,
		"DATENBEREITSTELLUNG_JAEHRLICH":             DATENBEREITSTELLUNG_JAEHRLICH,
		"DATENBEREITSTELLUNG_HISTORISCHE_LG":        DATENBEREITSTELLUNG_HISTORISCHE_LG,
		"DATENBEREITSTELLUNG_STUENDLICH":            DATENBEREITSTELLUNG_STUENDLICH,
		"DATENBEREITSTELLUNG_VIERTELJAEHRLICH":      DATENBEREITSTELLUNG_VIERTELJAEHRLICH,
		"DATENBEREITSTELLUNG_HALBJAEHRLICH":         DATENBEREITSTELLUNG_HALBJAEHRLICH,
		"DATENBEREITSTELLUNG_MONATLICH_ZUSAETZLICH": DATENBEREITSTELLUNG_MONATLICH_ZUSAETZLICH,
		"DATENBEREITSTELLUNG_EINMALIG":              DATENBEREITSTELLUNG_EINMALIG,
		"AUSLESUNG_2X_TAEGLICH_FERNAUSLESUNG":       AUSLESUNG_2X_TAEGLICH_FERNAUSLESUNG,
		"AUSLESUNG_3X_TAEGLICH_FERNAUSLESUNG":       AUSLESUNG_3X_TAEGLICH_FERNAUSLESUNG,
		"AUSLESUNG_TAEGLICH_FERNAUSLESUNG":          AUSLESUNG_TAEGLICH_FERNAUSLESUNG,
		"AUSLESUNG_MANUELL_MSB":                     AUSLESUNG_MANUELL_MSB,
		"AUSLESUNG_MONATLICH_FERNAUSLESUNG":         AUSLESUNG_MONATLICH_FERNAUSLESUNG,
		"AUSLESUNG_JAEHRLICH_FERNAUSLESUNG":         AUSLESUNG_JAEHRLICH_FERNAUSLESUNG,
		"AUSLESUNG_MDE":                             AUSLESUNG_MDE,
		"ABLESUNG_MONATLICH":                        ABLESUNG_MONATLICH,
		"ABLESUNG_VIERTELJAEHRLICH":                 ABLESUNG_VIERTELJAEHRLICH,
		"ABLESUNG_HALBJAEHRLICH":                    ABLESUNG_HALBJAEHRLICH,
		"ABLESUNG_JAEHRLICH":                        ABLESUNG_JAEHRLICH,
		"AUSLESUNG_FERNAUSLESUNG":                   AUSLESUNG_FERNAUSLESUNG,
		"ABLESUNG_ZUSAETZLICH_MSB":                  ABLESUNG_ZUSAETZLICH_MSB,
		"ABLESUNG_ZUSAETZLICH_KUNDE":                ABLESUNG_ZUSAETZLICH_KUNDE,
		"AUSLESUNG_FERNAUSLESUNG_ZUSAETZLICH_MSB":   AUSLESUNG_FERNAUSLESUNG_ZUSAETZLICH_MSB,
		"AUSLESUNG_MOATLICH_FERNAUSLESUNG":          AUSLESUNG_MOATLICH_FERNAUSLESUNG,
		"AUSLESUNG_STUENDLICH_FERNAUSLESUNG":        AUSLESUNG_STUENDLICH_FERNAUSLESUNG,
		"AUSLESUNG_TEMPERATURMENGENUMWERTER":        AUSLESUNG_TEMPERATURMENGENUMWERTER,
		"AUSLESUNG_ZUSTANDSMENGENUMWERTER":          AUSLESUNG_ZUSTANDSMENGENUMWERTER,
		"AUSLESUNG_SYSTEMMENGENUMWERTER":            AUSLESUNG_SYSTEMMENGENUMWERTER,
		"AUSLESUNG_VORGANG":                         AUSLESUNG_VORGANG,
		"AUSLESUNG_KOMPAKTMENGENUMWERTER":           AUSLESUNG_KOMPAKTMENGENUMWERTER,
		"SPERRUNG":                                  SPERRUNG,
		"ENTSPERRUNG":                               ENTSPERRUNG,
		"MAHNKOSTEN":                                MAHNKOSTEN,
		"INKASSOKOSTEN":                             INKASSOKOSTEN,
	}

	_DienstleistungValueToName = map[Dienstleistung]string{
		DATENBEREITSTELLUNG_TAEGLICH:              "DATENBEREITSTELLUNG_TAEGLICH",
		DATENBEREITSTELLUNG_WOECHENTLICH:          "DATENBEREITSTELLUNG_WOECHENTLICH",
		DATENBEREITSTELLUNG_MONATLICH:             "DATENBEREITSTELLUNG_MONATLICH",
		DATENBEREITSTELLUNG_JAEHRLICH:             "DATENBEREITSTELLUNG_JAEHRLICH",
		DATENBEREITSTELLUNG_HISTORISCHE_LG:        "DATENBEREITSTELLUNG_HISTORISCHE_LG",
		DATENBEREITSTELLUNG_STUENDLICH:            "DATENBEREITSTELLUNG_STUENDLICH",
		DATENBEREITSTELLUNG_VIERTELJAEHRLICH:      "DATENBEREITSTELLUNG_VIERTELJAEHRLICH",
		DATENBEREITSTELLUNG_HALBJAEHRLICH:         "DATENBEREITSTELLUNG_HALBJAEHRLICH",
		DATENBEREITSTELLUNG_MONATLICH_ZUSAETZLICH: "DATENBEREITSTELLUNG_MONATLICH_ZUSAETZLICH",
		DATENBEREITSTELLUNG_EINMALIG:              "DATENBEREITSTELLUNG_EINMALIG",
		AUSLESUNG_2X_TAEGLICH_FERNAUSLESUNG:       "AUSLESUNG_2X_TAEGLICH_FERNAUSLESUNG",
		AUSLESUNG_3X_TAEGLICH_FERNAUSLESUNG:       "AUSLESUNG_3X_TAEGLICH_FERNAUSLESUNG",
		AUSLESUNG_TAEGLICH_FERNAUSLESUNG:          "AUSLESUNG_TAEGLICH_FERNAUSLESUNG",
		AUSLESUNG_MANUELL_MSB:                     "AUSLESUNG_MANUELL_MSB",
		AUSLESUNG_MONATLICH_FERNAUSLESUNG:         "AUSLESUNG_MONATLICH_FERNAUSLESUNG",
		AUSLESUNG_JAEHRLICH_FERNAUSLESUNG:         "AUSLESUNG_JAEHRLICH_FERNAUSLESUNG",
		AUSLESUNG_MDE:                             "AUSLESUNG_MDE",
		ABLESUNG_MONATLICH:                        "ABLESUNG_MONATLICH",
		ABLESUNG_VIERTELJAEHRLICH:                 "ABLESUNG_VIERTELJAEHRLICH",
		ABLESUNG_HALBJAEHRLICH:                    "ABLESUNG_HALBJAEHRLICH",
		ABLESUNG_JAEHRLICH:                        "ABLESUNG_JAEHRLICH",
		AUSLESUNG_FERNAUSLESUNG:                   "AUSLESUNG_FERNAUSLESUNG",
		ABLESUNG_ZUSAETZLICH_MSB:                  "ABLESUNG_ZUSAETZLICH_MSB",
		ABLESUNG_ZUSAETZLICH_KUNDE:                "ABLESUNG_ZUSAETZLICH_KUNDE",
		AUSLESUNG_FERNAUSLESUNG_ZUSAETZLICH_MSB:   "AUSLESUNG_FERNAUSLESUNG_ZUSAETZLICH_MSB",
		AUSLESUNG_MOATLICH_FERNAUSLESUNG:          "AUSLESUNG_MOATLICH_FERNAUSLESUNG",
		AUSLESUNG_STUENDLICH_FERNAUSLESUNG:        "AUSLESUNG_STUENDLICH_FERNAUSLESUNG",
		AUSLESUNG_TEMPERATURMENGENUMWERTER:        "AUSLESUNG_TEMPERATURMENGENUMWERTER",
		AUSLESUNG_ZUSTANDSMENGENUMWERTER:          "AUSLESUNG_ZUSTANDSMENGENUMWERTER",
		AUSLESUNG_SYSTEMMENGENUMWERTER:            "AUSLESUNG_SYSTEMMENGENUMWERTER",
		AUSLESUNG_VORGANG:                         "AUSLESUNG_VORGANG",
		AUSLESUNG_KOMPAKTMENGENUMWERTER:           "AUSLESUNG_KOMPAKTMENGENUMWERTER",
		SPERRUNG:                                  "SPERRUNG",
		ENTSPERRUNG:                               "ENTSPERRUNG",
		MAHNKOSTEN:                                "MAHNKOSTEN",
		INKASSOKOSTEN:                             "INKASSOKOSTEN",
	}
)

func init() {
	var v Dienstleistung
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_DienstleistungNameToValue = map[string]Dienstleistung{
			interface{}(DATENBEREITSTELLUNG_TAEGLICH).(fmt.Stringer).String():              DATENBEREITSTELLUNG_TAEGLICH,
			interface{}(DATENBEREITSTELLUNG_WOECHENTLICH).(fmt.Stringer).String():          DATENBEREITSTELLUNG_WOECHENTLICH,
			interface{}(DATENBEREITSTELLUNG_MONATLICH).(fmt.Stringer).String():             DATENBEREITSTELLUNG_MONATLICH,
			interface{}(DATENBEREITSTELLUNG_JAEHRLICH).(fmt.Stringer).String():             DATENBEREITSTELLUNG_JAEHRLICH,
			interface{}(DATENBEREITSTELLUNG_HISTORISCHE_LG).(fmt.Stringer).String():        DATENBEREITSTELLUNG_HISTORISCHE_LG,
			interface{}(DATENBEREITSTELLUNG_STUENDLICH).(fmt.Stringer).String():            DATENBEREITSTELLUNG_STUENDLICH,
			interface{}(DATENBEREITSTELLUNG_VIERTELJAEHRLICH).(fmt.Stringer).String():      DATENBEREITSTELLUNG_VIERTELJAEHRLICH,
			interface{}(DATENBEREITSTELLUNG_HALBJAEHRLICH).(fmt.Stringer).String():         DATENBEREITSTELLUNG_HALBJAEHRLICH,
			interface{}(DATENBEREITSTELLUNG_MONATLICH_ZUSAETZLICH).(fmt.Stringer).String(): DATENBEREITSTELLUNG_MONATLICH_ZUSAETZLICH,
			interface{}(DATENBEREITSTELLUNG_EINMALIG).(fmt.Stringer).String():              DATENBEREITSTELLUNG_EINMALIG,
			interface{}(AUSLESUNG_2X_TAEGLICH_FERNAUSLESUNG).(fmt.Stringer).String():       AUSLESUNG_2X_TAEGLICH_FERNAUSLESUNG,
			interface{}(AUSLESUNG_3X_TAEGLICH_FERNAUSLESUNG).(fmt.Stringer).String():       AUSLESUNG_3X_TAEGLICH_FERNAUSLESUNG,
			interface{}(AUSLESUNG_TAEGLICH_FERNAUSLESUNG).(fmt.Stringer).String():          AUSLESUNG_TAEGLICH_FERNAUSLESUNG,
			interface{}(AUSLESUNG_MANUELL_MSB).(fmt.Stringer).String():                     AUSLESUNG_MANUELL_MSB,
			interface{}(AUSLESUNG_MONATLICH_FERNAUSLESUNG).(fmt.Stringer).String():         AUSLESUNG_MONATLICH_FERNAUSLESUNG,
			interface{}(AUSLESUNG_JAEHRLICH_FERNAUSLESUNG).(fmt.Stringer).String():         AUSLESUNG_JAEHRLICH_FERNAUSLESUNG,
			interface{}(AUSLESUNG_MDE).(fmt.Stringer).String():                             AUSLESUNG_MDE,
			interface{}(ABLESUNG_MONATLICH).(fmt.Stringer).String():                        ABLESUNG_MONATLICH,
			interface{}(ABLESUNG_VIERTELJAEHRLICH).(fmt.Stringer).String():                 ABLESUNG_VIERTELJAEHRLICH,
			interface{}(ABLESUNG_HALBJAEHRLICH).(fmt.Stringer).String():                    ABLESUNG_HALBJAEHRLICH,
			interface{}(ABLESUNG_JAEHRLICH).(fmt.Stringer).String():                        ABLESUNG_JAEHRLICH,
			interface{}(AUSLESUNG_FERNAUSLESUNG).(fmt.Stringer).String():                   AUSLESUNG_FERNAUSLESUNG,
			interface{}(ABLESUNG_ZUSAETZLICH_MSB).(fmt.Stringer).String():                  ABLESUNG_ZUSAETZLICH_MSB,
			interface{}(ABLESUNG_ZUSAETZLICH_KUNDE).(fmt.Stringer).String():                ABLESUNG_ZUSAETZLICH_KUNDE,
			interface{}(AUSLESUNG_FERNAUSLESUNG_ZUSAETZLICH_MSB).(fmt.Stringer).String():   AUSLESUNG_FERNAUSLESUNG_ZUSAETZLICH_MSB,
			interface{}(AUSLESUNG_MOATLICH_FERNAUSLESUNG).(fmt.Stringer).String():          AUSLESUNG_MOATLICH_FERNAUSLESUNG,
			interface{}(AUSLESUNG_STUENDLICH_FERNAUSLESUNG).(fmt.Stringer).String():        AUSLESUNG_STUENDLICH_FERNAUSLESUNG,
			interface{}(AUSLESUNG_TEMPERATURMENGENUMWERTER).(fmt.Stringer).String():        AUSLESUNG_TEMPERATURMENGENUMWERTER,
			interface{}(AUSLESUNG_ZUSTANDSMENGENUMWERTER).(fmt.Stringer).String():          AUSLESUNG_ZUSTANDSMENGENUMWERTER,
			interface{}(AUSLESUNG_SYSTEMMENGENUMWERTER).(fmt.Stringer).String():            AUSLESUNG_SYSTEMMENGENUMWERTER,
			interface{}(AUSLESUNG_VORGANG).(fmt.Stringer).String():                         AUSLESUNG_VORGANG,
			interface{}(AUSLESUNG_KOMPAKTMENGENUMWERTER).(fmt.Stringer).String():           AUSLESUNG_KOMPAKTMENGENUMWERTER,
			interface{}(SPERRUNG).(fmt.Stringer).String():                                  SPERRUNG,
			interface{}(ENTSPERRUNG).(fmt.Stringer).String():                               ENTSPERRUNG,
			interface{}(MAHNKOSTEN).(fmt.Stringer).String():                                MAHNKOSTEN,
			interface{}(INKASSOKOSTEN).(fmt.Stringer).String():                             INKASSOKOSTEN,
		}
	}
}

// MarshalJSON is generated so Dienstleistung satisfies json.Marshaler.
func (r Dienstleistung) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _DienstleistungValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Dienstleistung: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Dienstleistung satisfies json.Unmarshaler.
func (r *Dienstleistung) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Dienstleistung should be a string, got %s", data)
	}
	v, ok := _DienstleistungNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Dienstleistung %q", s)
	}
	*r = v
	return nil
}
