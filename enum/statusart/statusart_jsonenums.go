// Code generated by jsonenums --type StatusArt; DO NOT EDIT.

package statusart

import (
	"encoding/json"
	"fmt"
)

var (
	_StatusArtNameToValue = map[string]StatusArt{
		"VERTRAG":                           VERTRAG,
		"MESSWERTQUALITAET":                 MESSWERTQUALITAET,
		"MESSKLASSIFIZIERUNG":               MESSKLASSIFIZIERUNG,
		"PLAUSIBILISIERUNGSHINWEIS":         PLAUSIBILISIERUNGSHINWEIS,
		"ERSATZWERTBILDUNGSVERFAHREN":       ERSATZWERTBILDUNGSVERFAHREN,
		"KORREKTURGRUND":                    KORREKTURGRUND,
		"GASQUALITAET":                      GASQUALITAET,
		"GRUND_ERSATZWERTBILDUNGSVERFAHREN": GRUND_ERSATZWERTBILDUNGSVERFAHREN,
	}

	_StatusArtValueToName = map[StatusArt]string{
		VERTRAG:                           "VERTRAG",
		MESSWERTQUALITAET:                 "MESSWERTQUALITAET",
		MESSKLASSIFIZIERUNG:               "MESSKLASSIFIZIERUNG",
		PLAUSIBILISIERUNGSHINWEIS:         "PLAUSIBILISIERUNGSHINWEIS",
		ERSATZWERTBILDUNGSVERFAHREN:       "ERSATZWERTBILDUNGSVERFAHREN",
		KORREKTURGRUND:                    "KORREKTURGRUND",
		GASQUALITAET:                      "GASQUALITAET",
		GRUND_ERSATZWERTBILDUNGSVERFAHREN: "GRUND_ERSATZWERTBILDUNGSVERFAHREN",
	}
)

func init() {
	var v StatusArt
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_StatusArtNameToValue = map[string]StatusArt{
			interface{}(VERTRAG).(fmt.Stringer).String():                           VERTRAG,
			interface{}(MESSWERTQUALITAET).(fmt.Stringer).String():                 MESSWERTQUALITAET,
			interface{}(MESSKLASSIFIZIERUNG).(fmt.Stringer).String():               MESSKLASSIFIZIERUNG,
			interface{}(PLAUSIBILISIERUNGSHINWEIS).(fmt.Stringer).String():         PLAUSIBILISIERUNGSHINWEIS,
			interface{}(ERSATZWERTBILDUNGSVERFAHREN).(fmt.Stringer).String():       ERSATZWERTBILDUNGSVERFAHREN,
			interface{}(KORREKTURGRUND).(fmt.Stringer).String():                    KORREKTURGRUND,
			interface{}(GASQUALITAET).(fmt.Stringer).String():                      GASQUALITAET,
			interface{}(GRUND_ERSATZWERTBILDUNGSVERFAHREN).(fmt.Stringer).String(): GRUND_ERSATZWERTBILDUNGSVERFAHREN,
		}
	}
}

// MarshalJSON is generated so StatusArt satisfies json.Marshaler.
func (r StatusArt) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _StatusArtValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid StatusArt: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so StatusArt satisfies json.Unmarshaler.
func (r *StatusArt) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("StatusArt should be a string, got %s", data)
	}
	v, ok := _StatusArtNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid StatusArt %q", s)
	}
	*r = v
	return nil
}
