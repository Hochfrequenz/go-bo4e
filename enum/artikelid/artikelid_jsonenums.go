// Code generated by jsonenums --type ArtikelId; DO NOT EDIT.

package artikelid

import (
	"encoding/json"
	"fmt"
)

var (
	_ArtikelIdNameToValue = map[string]ArtikelId{
		"UNTERBRECHUNG_REGULAER":          UNTERBRECHUNG_REGULAER,
		"WIEDERHERSTELLUNG_REGULAER":      WIEDERHERSTELLUNG_REGULAER,
		"UNTERBRECHUNG_OHNE_ERFOLG":       UNTERBRECHUNG_OHNE_ERFOLG,
		"STORNO_UNTERBRECHUNG_BIS_VORTAG": STORNO_UNTERBRECHUNG_BIS_VORTAG,
		"STORNO_UNTERBRECHUNG_SPERRTAG":   STORNO_UNTERBRECHUNG_SPERRTAG,
		"WIEDERHERSTELLUNG_IRREGULAER":    WIEDERHERSTELLUNG_IRREGULAER,
		"VERZUGPAUSCHAL":                  VERZUGPAUSCHAL,
		"VERZUGVARIABEL":                  VERZUGVARIABEL,
	}

	_ArtikelIdValueToName = map[ArtikelId]string{
		UNTERBRECHUNG_REGULAER:          "UNTERBRECHUNG_REGULAER",
		WIEDERHERSTELLUNG_REGULAER:      "WIEDERHERSTELLUNG_REGULAER",
		UNTERBRECHUNG_OHNE_ERFOLG:       "UNTERBRECHUNG_OHNE_ERFOLG",
		STORNO_UNTERBRECHUNG_BIS_VORTAG: "STORNO_UNTERBRECHUNG_BIS_VORTAG",
		STORNO_UNTERBRECHUNG_SPERRTAG:   "STORNO_UNTERBRECHUNG_SPERRTAG",
		WIEDERHERSTELLUNG_IRREGULAER:    "WIEDERHERSTELLUNG_IRREGULAER",
		VERZUGPAUSCHAL:                  "VERZUGPAUSCHAL",
		VERZUGVARIABEL:                  "VERZUGVARIABEL",
	}
)

func init() {
	var v ArtikelId
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_ArtikelIdNameToValue = map[string]ArtikelId{
			interface{}(UNTERBRECHUNG_REGULAER).(fmt.Stringer).String():          UNTERBRECHUNG_REGULAER,
			interface{}(WIEDERHERSTELLUNG_REGULAER).(fmt.Stringer).String():      WIEDERHERSTELLUNG_REGULAER,
			interface{}(UNTERBRECHUNG_OHNE_ERFOLG).(fmt.Stringer).String():       UNTERBRECHUNG_OHNE_ERFOLG,
			interface{}(STORNO_UNTERBRECHUNG_BIS_VORTAG).(fmt.Stringer).String(): STORNO_UNTERBRECHUNG_BIS_VORTAG,
			interface{}(STORNO_UNTERBRECHUNG_SPERRTAG).(fmt.Stringer).String():   STORNO_UNTERBRECHUNG_SPERRTAG,
			interface{}(WIEDERHERSTELLUNG_IRREGULAER).(fmt.Stringer).String():    WIEDERHERSTELLUNG_IRREGULAER,
			interface{}(VERZUGPAUSCHAL).(fmt.Stringer).String():                  VERZUGPAUSCHAL,
			interface{}(VERZUGVARIABEL).(fmt.Stringer).String():                  VERZUGVARIABEL,
		}
	}
}

// MarshalJSON is generated so ArtikelId satisfies json.Marshaler.
func (r ArtikelId) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _ArtikelIdValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid ArtikelId: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so ArtikelId satisfies json.Unmarshaler.
func (r *ArtikelId) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ArtikelId should be a string, got %s", data)
	}
	v, ok := _ArtikelIdNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid ArtikelId %q", s)
	}
	*r = v
	return nil
}
