// Code generated by jsonenums --type Korrekturgrund; DO NOT EDIT.

package korrekturgrund

import (
	"encoding/json"
	"fmt"
)

var (
	_KorrekturgrundNameToValue = map[string]Korrekturgrund{
		"KEIN_ZUGANG":            KEIN_ZUGANG,
		"KOMMUNIKATIONSSTOERUNG": KOMMUNIKATIONSSTOERUNG,
		"NETZAUSFALL":            NETZAUSFALL,
		"SPANNUNGSAUSFALL":       SPANNUNGSAUSFALL,
		"GERAETEWECHSEL":         GERAETEWECHSEL,
		"KALIBRIERUNG":           KALIBRIERUNG,
		"GERAET_ARBEITET_AUSSERHALB_DER_BETRIEBSBEDINGUNG":     GERAET_ARBEITET_AUSSERHALB_DER_BETRIEBSBEDINGUNG,
		"MESSEINRICHTUNG_GESTOERT_DEFEKT":                      MESSEINRICHTUNG_GESTOERT_DEFEKT,
		"UNSICHERHEIT_MESSUNG":                                 UNSICHERHEIT_MESSUNG,
		"BERUECKSICHTIGUNG_STOERMENGENZAEHLWERK":               BERUECKSICHTIGUNG_STOERMENGENZAEHLWERK,
		"MENGENUMWERTUNG_UNVOLLSTAENDIG":                       MENGENUMWERTUNG_UNVOLLSTAENDIG,
		"UHRZEITGESTELLT_SYNCHRONISATION":                      UHRZEITGESTELLT_SYNCHRONISATION,
		"MESSWERT_UNPLAUSIBEL":                                 MESSWERT_UNPLAUSIBEL,
		"FALSCHER_WANDLERFAKTOR":                               FALSCHER_WANDLERFAKTOR,
		"FEHLERHAFTE_ABLESUNG":                                 FEHLERHAFTE_ABLESUNG,
		"AENDERUNG_DER_BERECHNUNG":                             AENDERUNG_DER_BERECHNUNG,
		"UMBAU_DER_MESSLOKATION":                               UMBAU_DER_MESSLOKATION,
		"DATENBEARBEITUNGSFEHLER":                              DATENBEARBEITUNGSFEHLER,
		"BRENNWERTKORREKTUR":                                   BRENNWERTKORREKTUR,
		"Z_ZAHL_KORREKTUR":                                     Z_ZAHL_KORREKTUR,
		"STOERUNG_DEFEKT_MESSEINRICHTUNG":                      STOERUNG_DEFEKT_MESSEINRICHTUNG,
		"AENDERUNG_TARIFSCHALTZEITEN":                          AENDERUNG_TARIFSCHALTZEITEN,
		"TARIFSCHALTGERAET_DEFEKT":                             TARIFSCHALTGERAET_DEFEKT,
		"IMPULSWERTIGKEIT_NICHT_AUSREICHEND":                   IMPULSWERTIGKEIT_NICHT_AUSREICHEND,
		"ENERGIEMENGE_IN_UNGEMESSENEM_ZEITINTERVALL":           ENERGIEMENGE_IN_UNGEMESSENEM_ZEITINTERVALL,
		"ENERGIE_AUS_DEM_UNGEPAIRTEN_ZEITINTERVALL":            ENERGIE_AUS_DEM_UNGEPAIRTEN_ZEITINTERVALL,
		"WARTUNGSARBEITEN_AN_GEEICHTEM_MESSGERAET":             WARTUNGSARBEITEN_AN_GEEICHTEM_MESSGERAET,
		"GESTOERTE_WERTE":                                      GESTOERTE_WERTE,
		"WARTUNGSARBEITEN_AN_EICHRECHTSKONFORMEN_MESSGERAETEN": WARTUNGSARBEITEN_AN_EICHRECHTSKONFORMEN_MESSGERAETEN,
		"KONSISTENZ_UND_SYNCHRONPRUEFUNG":                      KONSISTENZ_UND_SYNCHRONPRUEFUNG,
	}

	_KorrekturgrundValueToName = map[Korrekturgrund]string{
		KEIN_ZUGANG:            "KEIN_ZUGANG",
		KOMMUNIKATIONSSTOERUNG: "KOMMUNIKATIONSSTOERUNG",
		NETZAUSFALL:            "NETZAUSFALL",
		SPANNUNGSAUSFALL:       "SPANNUNGSAUSFALL",
		GERAETEWECHSEL:         "GERAETEWECHSEL",
		KALIBRIERUNG:           "KALIBRIERUNG",
		GERAET_ARBEITET_AUSSERHALB_DER_BETRIEBSBEDINGUNG:     "GERAET_ARBEITET_AUSSERHALB_DER_BETRIEBSBEDINGUNG",
		MESSEINRICHTUNG_GESTOERT_DEFEKT:                      "MESSEINRICHTUNG_GESTOERT_DEFEKT",
		UNSICHERHEIT_MESSUNG:                                 "UNSICHERHEIT_MESSUNG",
		BERUECKSICHTIGUNG_STOERMENGENZAEHLWERK:               "BERUECKSICHTIGUNG_STOERMENGENZAEHLWERK",
		MENGENUMWERTUNG_UNVOLLSTAENDIG:                       "MENGENUMWERTUNG_UNVOLLSTAENDIG",
		UHRZEITGESTELLT_SYNCHRONISATION:                      "UHRZEITGESTELLT_SYNCHRONISATION",
		MESSWERT_UNPLAUSIBEL:                                 "MESSWERT_UNPLAUSIBEL",
		FALSCHER_WANDLERFAKTOR:                               "FALSCHER_WANDLERFAKTOR",
		FEHLERHAFTE_ABLESUNG:                                 "FEHLERHAFTE_ABLESUNG",
		AENDERUNG_DER_BERECHNUNG:                             "AENDERUNG_DER_BERECHNUNG",
		UMBAU_DER_MESSLOKATION:                               "UMBAU_DER_MESSLOKATION",
		DATENBEARBEITUNGSFEHLER:                              "DATENBEARBEITUNGSFEHLER",
		BRENNWERTKORREKTUR:                                   "BRENNWERTKORREKTUR",
		Z_ZAHL_KORREKTUR:                                     "Z_ZAHL_KORREKTUR",
		STOERUNG_DEFEKT_MESSEINRICHTUNG:                      "STOERUNG_DEFEKT_MESSEINRICHTUNG",
		AENDERUNG_TARIFSCHALTZEITEN:                          "AENDERUNG_TARIFSCHALTZEITEN",
		TARIFSCHALTGERAET_DEFEKT:                             "TARIFSCHALTGERAET_DEFEKT",
		IMPULSWERTIGKEIT_NICHT_AUSREICHEND:                   "IMPULSWERTIGKEIT_NICHT_AUSREICHEND",
		ENERGIEMENGE_IN_UNGEMESSENEM_ZEITINTERVALL:           "ENERGIEMENGE_IN_UNGEMESSENEM_ZEITINTERVALL",
		ENERGIE_AUS_DEM_UNGEPAIRTEN_ZEITINTERVALL:            "ENERGIE_AUS_DEM_UNGEPAIRTEN_ZEITINTERVALL",
		WARTUNGSARBEITEN_AN_GEEICHTEM_MESSGERAET:             "WARTUNGSARBEITEN_AN_GEEICHTEM_MESSGERAET",
		GESTOERTE_WERTE:                                      "GESTOERTE_WERTE",
		WARTUNGSARBEITEN_AN_EICHRECHTSKONFORMEN_MESSGERAETEN: "WARTUNGSARBEITEN_AN_EICHRECHTSKONFORMEN_MESSGERAETEN",
		KONSISTENZ_UND_SYNCHRONPRUEFUNG:                      "KONSISTENZ_UND_SYNCHRONPRUEFUNG",
	}
)

func init() {
	var v Korrekturgrund
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_KorrekturgrundNameToValue = map[string]Korrekturgrund{
			interface{}(KEIN_ZUGANG).(fmt.Stringer).String():                                          KEIN_ZUGANG,
			interface{}(KOMMUNIKATIONSSTOERUNG).(fmt.Stringer).String():                               KOMMUNIKATIONSSTOERUNG,
			interface{}(NETZAUSFALL).(fmt.Stringer).String():                                          NETZAUSFALL,
			interface{}(SPANNUNGSAUSFALL).(fmt.Stringer).String():                                     SPANNUNGSAUSFALL,
			interface{}(GERAETEWECHSEL).(fmt.Stringer).String():                                       GERAETEWECHSEL,
			interface{}(KALIBRIERUNG).(fmt.Stringer).String():                                         KALIBRIERUNG,
			interface{}(GERAET_ARBEITET_AUSSERHALB_DER_BETRIEBSBEDINGUNG).(fmt.Stringer).String():     GERAET_ARBEITET_AUSSERHALB_DER_BETRIEBSBEDINGUNG,
			interface{}(MESSEINRICHTUNG_GESTOERT_DEFEKT).(fmt.Stringer).String():                      MESSEINRICHTUNG_GESTOERT_DEFEKT,
			interface{}(UNSICHERHEIT_MESSUNG).(fmt.Stringer).String():                                 UNSICHERHEIT_MESSUNG,
			interface{}(BERUECKSICHTIGUNG_STOERMENGENZAEHLWERK).(fmt.Stringer).String():               BERUECKSICHTIGUNG_STOERMENGENZAEHLWERK,
			interface{}(MENGENUMWERTUNG_UNVOLLSTAENDIG).(fmt.Stringer).String():                       MENGENUMWERTUNG_UNVOLLSTAENDIG,
			interface{}(UHRZEITGESTELLT_SYNCHRONISATION).(fmt.Stringer).String():                      UHRZEITGESTELLT_SYNCHRONISATION,
			interface{}(MESSWERT_UNPLAUSIBEL).(fmt.Stringer).String():                                 MESSWERT_UNPLAUSIBEL,
			interface{}(FALSCHER_WANDLERFAKTOR).(fmt.Stringer).String():                               FALSCHER_WANDLERFAKTOR,
			interface{}(FEHLERHAFTE_ABLESUNG).(fmt.Stringer).String():                                 FEHLERHAFTE_ABLESUNG,
			interface{}(AENDERUNG_DER_BERECHNUNG).(fmt.Stringer).String():                             AENDERUNG_DER_BERECHNUNG,
			interface{}(UMBAU_DER_MESSLOKATION).(fmt.Stringer).String():                               UMBAU_DER_MESSLOKATION,
			interface{}(DATENBEARBEITUNGSFEHLER).(fmt.Stringer).String():                              DATENBEARBEITUNGSFEHLER,
			interface{}(BRENNWERTKORREKTUR).(fmt.Stringer).String():                                   BRENNWERTKORREKTUR,
			interface{}(Z_ZAHL_KORREKTUR).(fmt.Stringer).String():                                     Z_ZAHL_KORREKTUR,
			interface{}(STOERUNG_DEFEKT_MESSEINRICHTUNG).(fmt.Stringer).String():                      STOERUNG_DEFEKT_MESSEINRICHTUNG,
			interface{}(AENDERUNG_TARIFSCHALTZEITEN).(fmt.Stringer).String():                          AENDERUNG_TARIFSCHALTZEITEN,
			interface{}(TARIFSCHALTGERAET_DEFEKT).(fmt.Stringer).String():                             TARIFSCHALTGERAET_DEFEKT,
			interface{}(IMPULSWERTIGKEIT_NICHT_AUSREICHEND).(fmt.Stringer).String():                   IMPULSWERTIGKEIT_NICHT_AUSREICHEND,
			interface{}(ENERGIEMENGE_IN_UNGEMESSENEM_ZEITINTERVALL).(fmt.Stringer).String():           ENERGIEMENGE_IN_UNGEMESSENEM_ZEITINTERVALL,
			interface{}(ENERGIE_AUS_DEM_UNGEPAIRTEN_ZEITINTERVALL).(fmt.Stringer).String():            ENERGIE_AUS_DEM_UNGEPAIRTEN_ZEITINTERVALL,
			interface{}(WARTUNGSARBEITEN_AN_GEEICHTEM_MESSGERAET).(fmt.Stringer).String():             WARTUNGSARBEITEN_AN_GEEICHTEM_MESSGERAET,
			interface{}(GESTOERTE_WERTE).(fmt.Stringer).String():                                      GESTOERTE_WERTE,
			interface{}(WARTUNGSARBEITEN_AN_EICHRECHTSKONFORMEN_MESSGERAETEN).(fmt.Stringer).String(): WARTUNGSARBEITEN_AN_EICHRECHTSKONFORMEN_MESSGERAETEN,
			interface{}(KONSISTENZ_UND_SYNCHRONPRUEFUNG).(fmt.Stringer).String():                      KONSISTENZ_UND_SYNCHRONPRUEFUNG,
		}
	}
}

// MarshalJSON is generated so Korrekturgrund satisfies json.Marshaler.
func (r Korrekturgrund) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _KorrekturgrundValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Korrekturgrund: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Korrekturgrund satisfies json.Unmarshaler.
func (r *Korrekturgrund) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Korrekturgrund should be a string, got %s", data)
	}
	v, ok := _KorrekturgrundNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Korrekturgrund %q", s)
	}
	*r = v
	return nil
}
