// Code generated by jsonenums --type Ersatzwertbildungsverfahren; DO NOT EDIT.

package ersatzwertbildungsverfahren

import (
	"encoding/json"
	"fmt"
)

var (
	_ErsatzwertbildungsverfahrenNameToValue = map[string]Ersatzwertbildungsverfahren{
		"Z88_VERGLEICHSMESSUNGGEEICHT":                    Z88_VERGLEICHSMESSUNGGEEICHT,
		"Z89_VERGLEICHSMESSUNGNICHTGEEICHT":               Z89_VERGLEICHSMESSUNGNICHTGEEICHT,
		"Z90_MESSWERTNACHBILDUNGAUSGEEICHTENWERTEN":       Z90_MESSWERTNACHBILDUNGAUSGEEICHTENWERTEN,
		"Z91_MESSWERTNACHBILDUNGAUSNICHTGEEICHTENWERTEN":  Z91_MESSWERTNACHBILDUNGAUSNICHTGEEICHTENWERTEN,
		"Z92_INTERPOLATION":                               Z92_INTERPOLATION,
		"Z93_HALTEWERT":                                   Z93_HALTEWERT,
		"Z94_BILANZIERUNGNETZABSCHNITT":                   Z94_BILANZIERUNGNETZABSCHNITT,
		"Z95_HISTORISCHEMESSWERTE":                        Z95_HISTORISCHEMESSWERTE,
		"ZQ8_AUFTEILUNG":                                  ZQ8_AUFTEILUNG,
		"ZQ9_VERWENDUNGVONWERTENDESSTOERMENGENZAEHLWERKS": ZQ9_VERWENDUNGVONWERTENDESSTOERMENGENZAEHLWERKS,
		"ZR0_UMGANGSUNDKORREKTURMENGEN":                   ZR0_UMGANGSUNDKORREKTURMENGEN,
		"ZJ2_STATISCHEMETHODE":                            ZJ2_STATISCHEMETHODE,
	}

	_ErsatzwertbildungsverfahrenValueToName = map[Ersatzwertbildungsverfahren]string{
		Z88_VERGLEICHSMESSUNGGEEICHT:                    "Z88_VERGLEICHSMESSUNGGEEICHT",
		Z89_VERGLEICHSMESSUNGNICHTGEEICHT:               "Z89_VERGLEICHSMESSUNGNICHTGEEICHT",
		Z90_MESSWERTNACHBILDUNGAUSGEEICHTENWERTEN:       "Z90_MESSWERTNACHBILDUNGAUSGEEICHTENWERTEN",
		Z91_MESSWERTNACHBILDUNGAUSNICHTGEEICHTENWERTEN:  "Z91_MESSWERTNACHBILDUNGAUSNICHTGEEICHTENWERTEN",
		Z92_INTERPOLATION:                               "Z92_INTERPOLATION",
		Z93_HALTEWERT:                                   "Z93_HALTEWERT",
		Z94_BILANZIERUNGNETZABSCHNITT:                   "Z94_BILANZIERUNGNETZABSCHNITT",
		Z95_HISTORISCHEMESSWERTE:                        "Z95_HISTORISCHEMESSWERTE",
		ZQ8_AUFTEILUNG:                                  "ZQ8_AUFTEILUNG",
		ZQ9_VERWENDUNGVONWERTENDESSTOERMENGENZAEHLWERKS: "ZQ9_VERWENDUNGVONWERTENDESSTOERMENGENZAEHLWERKS",
		ZR0_UMGANGSUNDKORREKTURMENGEN:                   "ZR0_UMGANGSUNDKORREKTURMENGEN",
		ZJ2_STATISCHEMETHODE:                            "ZJ2_STATISCHEMETHODE",
	}
)

func init() {
	var v Ersatzwertbildungsverfahren
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_ErsatzwertbildungsverfahrenNameToValue = map[string]Ersatzwertbildungsverfahren{
			interface{}(Z88_VERGLEICHSMESSUNGGEEICHT).(fmt.Stringer).String():                    Z88_VERGLEICHSMESSUNGGEEICHT,
			interface{}(Z89_VERGLEICHSMESSUNGNICHTGEEICHT).(fmt.Stringer).String():               Z89_VERGLEICHSMESSUNGNICHTGEEICHT,
			interface{}(Z90_MESSWERTNACHBILDUNGAUSGEEICHTENWERTEN).(fmt.Stringer).String():       Z90_MESSWERTNACHBILDUNGAUSGEEICHTENWERTEN,
			interface{}(Z91_MESSWERTNACHBILDUNGAUSNICHTGEEICHTENWERTEN).(fmt.Stringer).String():  Z91_MESSWERTNACHBILDUNGAUSNICHTGEEICHTENWERTEN,
			interface{}(Z92_INTERPOLATION).(fmt.Stringer).String():                               Z92_INTERPOLATION,
			interface{}(Z93_HALTEWERT).(fmt.Stringer).String():                                   Z93_HALTEWERT,
			interface{}(Z94_BILANZIERUNGNETZABSCHNITT).(fmt.Stringer).String():                   Z94_BILANZIERUNGNETZABSCHNITT,
			interface{}(Z95_HISTORISCHEMESSWERTE).(fmt.Stringer).String():                        Z95_HISTORISCHEMESSWERTE,
			interface{}(ZQ8_AUFTEILUNG).(fmt.Stringer).String():                                  ZQ8_AUFTEILUNG,
			interface{}(ZQ9_VERWENDUNGVONWERTENDESSTOERMENGENZAEHLWERKS).(fmt.Stringer).String(): ZQ9_VERWENDUNGVONWERTENDESSTOERMENGENZAEHLWERKS,
			interface{}(ZR0_UMGANGSUNDKORREKTURMENGEN).(fmt.Stringer).String():                   ZR0_UMGANGSUNDKORREKTURMENGEN,
			interface{}(ZJ2_STATISCHEMETHODE).(fmt.Stringer).String():                            ZJ2_STATISCHEMETHODE,
		}
	}
}

// MarshalJSON is generated so Ersatzwertbildungsverfahren satisfies json.Marshaler.
func (r Ersatzwertbildungsverfahren) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _ErsatzwertbildungsverfahrenValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Ersatzwertbildungsverfahren: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Ersatzwertbildungsverfahren satisfies json.Unmarshaler.
func (r *Ersatzwertbildungsverfahren) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Ersatzwertbildungsverfahren should be a string, got %s", data)
	}
	v, ok := _ErsatzwertbildungsverfahrenNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Ersatzwertbildungsverfahren %q", s)
	}
	*r = v
	return nil
}
