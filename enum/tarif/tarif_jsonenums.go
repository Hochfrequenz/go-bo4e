// Code generated by jsonenums --type Tarif; DO NOT EDIT.

package tarif

import (
	"encoding/json"
	"fmt"
)

var (
	_TarifNameToValue = map[string]Tarif{
		"T1_TARIF1": T1_TARIF1,
		"T2_TARIF2": T2_TARIF2,
		"T3_TARIF3": T3_TARIF3,
		"T4_TARIF4": T4_TARIF4,
		"T5_TARIF5": T5_TARIF5,
		"T6_TARIF6": T6_TARIF6,
		"T7_TARIF7": T7_TARIF7,
		"T8_TARIF8": T8_TARIF8,
		"T9_TARIF9": T9_TARIF9,
	}

	_TarifValueToName = map[Tarif]string{
		T1_TARIF1: "T1_TARIF1",
		T2_TARIF2: "T2_TARIF2",
		T3_TARIF3: "T3_TARIF3",
		T4_TARIF4: "T4_TARIF4",
		T5_TARIF5: "T5_TARIF5",
		T6_TARIF6: "T6_TARIF6",
		T7_TARIF7: "T7_TARIF7",
		T8_TARIF8: "T8_TARIF8",
		T9_TARIF9: "T9_TARIF9",
	}
)

func init() {
	var v Tarif
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_TarifNameToValue = map[string]Tarif{
			interface{}(T1_TARIF1).(fmt.Stringer).String(): T1_TARIF1,
			interface{}(T2_TARIF2).(fmt.Stringer).String(): T2_TARIF2,
			interface{}(T3_TARIF3).(fmt.Stringer).String(): T3_TARIF3,
			interface{}(T4_TARIF4).(fmt.Stringer).String(): T4_TARIF4,
			interface{}(T5_TARIF5).(fmt.Stringer).String(): T5_TARIF5,
			interface{}(T6_TARIF6).(fmt.Stringer).String(): T6_TARIF6,
			interface{}(T7_TARIF7).(fmt.Stringer).String(): T7_TARIF7,
			interface{}(T8_TARIF8).(fmt.Stringer).String(): T8_TARIF8,
			interface{}(T9_TARIF9).(fmt.Stringer).String(): T9_TARIF9,
		}
	}
}

// MarshalJSON is generated so Tarif satisfies json.Marshaler.
func (r Tarif) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _TarifValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Tarif: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Tarif satisfies json.Unmarshaler.
func (r *Tarif) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Tarif should be a string, got %s", data)
	}
	v, ok := _TarifNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Tarif %q", s)
	}
	*r = v
	return nil
}
