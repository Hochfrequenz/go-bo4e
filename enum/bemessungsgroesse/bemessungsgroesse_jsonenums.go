// Code generated by jsonenums --type Bemessungsgroesse; DO NOT EDIT.

package bemessungsgroesse

import (
	"encoding/json"
	"fmt"
)

var (
	_BemessungsgroesseNameToValue = map[string]Bemessungsgroesse{
		"WIRKARBEIT_EL":     WIRKARBEIT_EL,
		"LEISTUNG_EL":       LEISTUNG_EL,
		"BLINDARBEIT_KAP":   BLINDARBEIT_KAP,
		"BLINDARBEIT_IND":   BLINDARBEIT_IND,
		"BLINDLEISTUNG_KAP": BLINDLEISTUNG_KAP,
		"BLINDLEISTUNG_IND": BLINDLEISTUNG_IND,
		"WIRKARBEIT_TH":     WIRKARBEIT_TH,
		"LEISTUNG_TH":       LEISTUNG_TH,
		"VOLUMEN":           VOLUMEN,
		"VOLUMENSTROM":      VOLUMENSTROM,
		"BENUTZUNGSDAUER":   BENUTZUNGSDAUER,
		"ANZAHL":            ANZAHL,
	}

	_BemessungsgroesseValueToName = map[Bemessungsgroesse]string{
		WIRKARBEIT_EL:     "WIRKARBEIT_EL",
		LEISTUNG_EL:       "LEISTUNG_EL",
		BLINDARBEIT_KAP:   "BLINDARBEIT_KAP",
		BLINDARBEIT_IND:   "BLINDARBEIT_IND",
		BLINDLEISTUNG_KAP: "BLINDLEISTUNG_KAP",
		BLINDLEISTUNG_IND: "BLINDLEISTUNG_IND",
		WIRKARBEIT_TH:     "WIRKARBEIT_TH",
		LEISTUNG_TH:       "LEISTUNG_TH",
		VOLUMEN:           "VOLUMEN",
		VOLUMENSTROM:      "VOLUMENSTROM",
		BENUTZUNGSDAUER:   "BENUTZUNGSDAUER",
		ANZAHL:            "ANZAHL",
	}
)

func init() {
	var v Bemessungsgroesse
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_BemessungsgroesseNameToValue = map[string]Bemessungsgroesse{
			interface{}(WIRKARBEIT_EL).(fmt.Stringer).String():     WIRKARBEIT_EL,
			interface{}(LEISTUNG_EL).(fmt.Stringer).String():       LEISTUNG_EL,
			interface{}(BLINDARBEIT_KAP).(fmt.Stringer).String():   BLINDARBEIT_KAP,
			interface{}(BLINDARBEIT_IND).(fmt.Stringer).String():   BLINDARBEIT_IND,
			interface{}(BLINDLEISTUNG_KAP).(fmt.Stringer).String(): BLINDLEISTUNG_KAP,
			interface{}(BLINDLEISTUNG_IND).(fmt.Stringer).String(): BLINDLEISTUNG_IND,
			interface{}(WIRKARBEIT_TH).(fmt.Stringer).String():     WIRKARBEIT_TH,
			interface{}(LEISTUNG_TH).(fmt.Stringer).String():       LEISTUNG_TH,
			interface{}(VOLUMEN).(fmt.Stringer).String():           VOLUMEN,
			interface{}(VOLUMENSTROM).(fmt.Stringer).String():      VOLUMENSTROM,
			interface{}(BENUTZUNGSDAUER).(fmt.Stringer).String():   BENUTZUNGSDAUER,
			interface{}(ANZAHL).(fmt.Stringer).String():            ANZAHL,
		}
	}
}

// MarshalJSON is generated so Bemessungsgroesse satisfies json.Marshaler.
func (r Bemessungsgroesse) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _BemessungsgroesseValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Bemessungsgroesse: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Bemessungsgroesse satisfies json.Unmarshaler.
func (r *Bemessungsgroesse) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Bemessungsgroesse should be a string, got %s", data)
	}
	v, ok := _BemessungsgroesseNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Bemessungsgroesse %q", s)
	}
	*r = v
	return nil
}
