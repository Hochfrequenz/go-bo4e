// Code generated by jsonenums --type Anfragetyp; DO NOT EDIT.

package anfragetyp

import (
	"encoding/json"
	"fmt"
)

var (
	_AnfragetypNameToValue = map[string]Anfragetyp{
		"START_ABO":                             START_ABO,
		"ENDE_ABO":                              ENDE_ABO,
		"KAUF":                                  KAUF,
		"NUTZUNGSUEBERLASSUNG":                  NUTZUNGSUEBERLASSUNG,
		"KANN_NICHT_ANGEBOTEN_WERDEN":           KANN_NICHT_ANGEBOTEN_WERDEN,
		"ABRECHNUNGSBRENNWERT_UND_ZUSTANDSZAHL": ABRECHNUNGSBRENNWERT_UND_ZUSTANDSZAHL,
		"LASTGANGDATEN":                         LASTGANGDATEN,
		"ZAEHLERSTAENDE":                        ZAEHLERSTAENDE,
		"WERTEERMITTLUNG":                       WERTEERMITTLUNG,
		"LIEFERRICHTUNG":                        LIEFERRICHTUNG,
		"ANGEBOT_AUF_BASIS_PREISBLATT":          ANGEBOT_AUF_BASIS_PREISBLATT,
		"INDIVIDUELLES_ANGEBOT":                 INDIVIDUELLES_ANGEBOT,
		"ENERGIEMENGE_EINZELWERT":               ENERGIEMENGE_EINZELWERT,
	}

	_AnfragetypValueToName = map[Anfragetyp]string{
		START_ABO:                             "START_ABO",
		ENDE_ABO:                              "ENDE_ABO",
		KAUF:                                  "KAUF",
		NUTZUNGSUEBERLASSUNG:                  "NUTZUNGSUEBERLASSUNG",
		KANN_NICHT_ANGEBOTEN_WERDEN:           "KANN_NICHT_ANGEBOTEN_WERDEN",
		ABRECHNUNGSBRENNWERT_UND_ZUSTANDSZAHL: "ABRECHNUNGSBRENNWERT_UND_ZUSTANDSZAHL",
		LASTGANGDATEN:                         "LASTGANGDATEN",
		ZAEHLERSTAENDE:                        "ZAEHLERSTAENDE",
		WERTEERMITTLUNG:                       "WERTEERMITTLUNG",
		LIEFERRICHTUNG:                        "LIEFERRICHTUNG",
		ANGEBOT_AUF_BASIS_PREISBLATT:          "ANGEBOT_AUF_BASIS_PREISBLATT",
		INDIVIDUELLES_ANGEBOT:                 "INDIVIDUELLES_ANGEBOT",
		ENERGIEMENGE_EINZELWERT:               "ENERGIEMENGE_EINZELWERT",
	}
)

func init() {
	var v Anfragetyp
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_AnfragetypNameToValue = map[string]Anfragetyp{
			interface{}(START_ABO).(fmt.Stringer).String():                             START_ABO,
			interface{}(ENDE_ABO).(fmt.Stringer).String():                              ENDE_ABO,
			interface{}(KAUF).(fmt.Stringer).String():                                  KAUF,
			interface{}(NUTZUNGSUEBERLASSUNG).(fmt.Stringer).String():                  NUTZUNGSUEBERLASSUNG,
			interface{}(KANN_NICHT_ANGEBOTEN_WERDEN).(fmt.Stringer).String():           KANN_NICHT_ANGEBOTEN_WERDEN,
			interface{}(ABRECHNUNGSBRENNWERT_UND_ZUSTANDSZAHL).(fmt.Stringer).String(): ABRECHNUNGSBRENNWERT_UND_ZUSTANDSZAHL,
			interface{}(LASTGANGDATEN).(fmt.Stringer).String():                         LASTGANGDATEN,
			interface{}(ZAEHLERSTAENDE).(fmt.Stringer).String():                        ZAEHLERSTAENDE,
			interface{}(WERTEERMITTLUNG).(fmt.Stringer).String():                       WERTEERMITTLUNG,
			interface{}(LIEFERRICHTUNG).(fmt.Stringer).String():                        LIEFERRICHTUNG,
			interface{}(ANGEBOT_AUF_BASIS_PREISBLATT).(fmt.Stringer).String():          ANGEBOT_AUF_BASIS_PREISBLATT,
			interface{}(INDIVIDUELLES_ANGEBOT).(fmt.Stringer).String():                 INDIVIDUELLES_ANGEBOT,
			interface{}(ENERGIEMENGE_EINZELWERT).(fmt.Stringer).String():               ENERGIEMENGE_EINZELWERT,
		}
	}
}

// MarshalJSON is generated so Anfragetyp satisfies json.Marshaler.
func (r Anfragetyp) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _AnfragetypValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid Anfragetyp: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Anfragetyp satisfies json.Unmarshaler.
func (r *Anfragetyp) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Anfragetyp should be a string, got %s", data)
	}
	v, ok := _AnfragetypNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid Anfragetyp %q", s)
	}
	*r = v
	return nil
}
